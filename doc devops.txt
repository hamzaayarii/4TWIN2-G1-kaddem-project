
mysql -u root -p
password:root
USE kaddem_db;
SHOW TABLES;
SELECT * FROM universite;

docker-compose down
docker-compose build  # If you changed Dockerfiles
docker-compose up -d
 curl http://localhost:8082/kaddem/universite/universites/1

 8089 is the port the backend application is listening to inside the container.

 8082 is the port exposed on your host machine (Vagrant VM).

http://localhost:8082/kaddem/swagger-ui/index.html#/
docker-compose down
docker-compose up -d
docker-compose build --no-cache

location /kaddem/ {
    proxy_pass http://backend:8089/kaddem/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
}
âœ… You're proxying from frontend Nginx to container backend:8089, because that's where the backend actually listens internally.


**prometheus**
Check if Prometheus is correctly scraping your Spring Boot app metrics.
Go to Prometheus at: http://localhost:9090/targets
You should see the spring-boot-app target with status "UP".

Go to Prometheus at: http://localhost:9090/graph
Run a query to check for HTTP request metrics:
Type http_server_requests_seconds_count (this metric will be generated by Spring Boot Actuator for HTTP requests)


gmail key:yjid bpxs zfxa wqwu